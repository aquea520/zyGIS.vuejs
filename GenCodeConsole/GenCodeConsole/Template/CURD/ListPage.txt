<#@ template language="C#" #>
<#@ parameter name="DbHelper" type="Lilee.GeneratorCore.DbHelper" #>
<#@ parameter name="config" type="Lilee.GeneratorCore.config" #>
<#@ parameter name="parameter1" type="Lilee.GeneratorCore.Parameter" #>
<#
				var SelectColumns = parameter1.page.SelectColumns;
				var GridColumns = parameter1.page.DgColumns;
				var page = parameter1.page;
#>
<link href="~/Scripts/ligerUI/skins/Aqua/css/ligerui-filter.css" rel="stylesheet" />
<link href="~/Scripts/ligerUI/skins/Aqua/css/ligerui-form.css" rel="stylesheet" />
<script src="~/Scripts/ligerUI/js/core/base.js"></script>
<script src="~/Scripts/ligerUI/js/plugins/ligerFilter.js"></script>
<script src="~/Scripts/ligerUI/js/plugins/ligerTextBox.js"></script>
<script src="~/Scripts/ligerUI/js/plugins/ligerDateEditor.js"></script>
<script src="~/Scripts/ligerUI/js/plugins/ligerSpinner.js"></script>
<script src="~/Scripts/LiLeeLib.js"></script>
<style type="text/css">
    body {
        margin:1px;
    }
</style>
<div id="p" class="easyui-panel" title="<#= page.Title #>" style="height:<#= (SelectColumns.Count(t=> t.Newline == true) + 1) * 35 +30 #>px;">
    <table  cellspacing="0" cellpadding="0" style="float:left">
        <tbody>
            <tr>
			<#	foreach (var column in SelectColumns){
					if(column.Newline.Value == true){
			#>	</tr>
			<tr>
			<# } #>
	<td align="right" style="min-height:35px"><#= column.CHName #>：</td>
				<td align="left" >
					<div  style="width: 178px;">
						<# switch(column.HtmlType){  
							case "text" :
						#><input type="text" data-bind="value: <#= column.ColumnName #>" />
						<#  
							break;
							case "select" :
						#><select id="ddl<#= column.ColumnName #>" class="easyui-combogrid" name="<#= column.ColumnName #>" style="width:160px;"
								data-options="
									panelWidth:160,
									idField:'value',
									textField:'text',
									url:'/SysAdmin/Comm/getSelectOptions/<#= column.SelectCategory #>',
									columns:[[
										{field:'text',title:'<#= column.CHName #>',width:120}
									]],
									rownumbers: true
								" ></select>
						<# 
							break;
						}  
					#></div>
				</td>
		<# } #></tr>
        </tbody>
    </table>
	<table>
        <tr>
            <td align="left">
                <a href="#" class="easyui-linkbutton" iconcls="icon-search" style="width: 70px" data-bind="click: doSearch">查询</a>
            </td>
        </tr>
    </table>
</div>
<table id="gGrid"></table>
<div id="gTool">  
	<a href="#" class="easyui-linkbutton" iconCls="icon-blank" plain="true" data-bind="click: View">查看</a>
    <a href="#" class="easyui-linkbutton" iconCls="icon-add" plain="true" data-bind="click: Create">新增</a>
	<a href="#" class="easyui-linkbutton" iconCls="icon-edit" plain="true" data-bind="click: Edit">修改</a>
	<a href="#" class="easyui-linkbutton" iconCls="icon-remove" plain="true" data-bind="click: Delete">删除</a>
    <a href="#" class="easyui-linkbutton" iconCls="icon-search" plain="true" data-bind="click: ShowFilter">高级查询</a>
</div>  
<div id="dd"><div id="filtercontainer"></div></div>
<div id="winCreate"></div>


<script type="text/javascript">
    $(function () {
        var fields = [];
		<#	foreach (var column in GridColumns){
		             string type = "'string'";
					 switch(column.CSharpType){  
						case "DateTime":
							type = "'date', options: { showTime: true }";
							break;
						case "int":
							type = "'number', options: { type: 'float' }";
							break;
					 }
			
         #>fields.push({ display: '<#= column.CHName #>', name: '<#= column.ColumnName #>', editor: { type: <#= type  #> }  });
			<# } #>
        
        
        var viewModel = {
			<#
				foreach (var column in SelectColumns)
				{
					if(column.HtmlType == "text")
					{
			#>
			<#= column.ColumnName #>: ko.observable("") <#= column.EndChar #>
			<# } } #>
            
        };
		viewModel.View = function () {
            $("#winCreate").dialog({
                title: "查看",
                href: '/<#= page.MoudleName #>/<#= page.ActionName #>/Info',
                width: 700,
                height: 300,
                modal: true,
                buttons: [{
                    text: '关闭',
                    iconCls: 'icon-cancel',
                    handler: function () { $("#winCreate").dialog("close"); }
                }]
            });
        }
        viewModel.Create = function () {
            $("#winCreate").dialog({
                title: "新增",
                href: '/<#= page.MoudleName #>/<#= page.ActionName #>/Create',
                width: 700,
                height: 300,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                        $("#userSubmit", "#winCreate").click();
                    }
                }, {
                    text: '取消',
                    iconCls: 'icon-cancel',
                    handler: function () { $("#winCreate").dialog("close"); }
                }]
            });
        }
		viewModel.Edit = function () {
            var row = $('#gGrid').datagrid('getSelected');
            if (!row) {
                $.messager.alert('提示', "请选择需要修改的行", "info");
                return;
            }
            $("#winCreate").dialog({
                title: "修改",
                href: '/<#= page.MoudleName #>/<#= page.ActionName #>/Edit',
                width: 700,
                height: 300,
                modal: true,
                buttons: [{
                    text: '确定',
                    iconCls: 'icon-ok',
                    handler: function () {
                        $("#userSubmit", "#winCreate").click();
                    }
                }, {
                    text: '取消',
                    iconCls: 'icon-cancel',
                    handler: function () { $("#winCreate").dialog("close"); }
                }]
            });
        }
		viewModel.Delete = function () {
			var row = $('#gGrid').datagrid('getSelected');
		    if (!row) {
		        $.messager.alert('提示', "请选择需要删除的行", "info");
		        return;
		    }
            $.messager.confirm('提示', '是否删除选中的行?', function (r) {
                if (r) {
                    $.post("/<#= page.MoudleName #>/<#= page.ActionName #>/Delete", { Id: row.Id }, function (data) {
                        if (data.result) {
                            $.messager.alert('提示', data.msg,"info");
                        } else {
                            $.messager.alert('提示', data.msg, "error");
                        }
                        $('#gGrid').datagrid('reload');
                        $('#gGrid').datagrid('unselectAll'); 
                    });
                }
            });
        }
        viewModel.ShowFilter = function () {
            if (window.winfilter) {
                window.winfilter.dialog('open');
            }
            else {      
                window.winfilter = $("#dd").dialog({
                    title:"搜索条件",
                    width: 420, height: 208,
                    buttons: [
                        { text: '确定', handler: function (item, dialog) { viewModel.doSearchByFilter(); $("#dd").dialog('close'); } },
                        { text: '取消', handler: function (item, dialog) { $("#dd").dialog('close'); } }
                    ]
                });
                window.filter = $('#filtercontainer', window.winfilter).width(380).height(120).ligerFilter({ fields: fields });       
            } 
        }
        viewModel.doSearch = function () {
            var strWhere = viewModel.getWhere();
            $('#gGrid').datagrid('load',
                { where: strWhere });
        }

        viewModel.getWhere = function () {
            var group = { rules: [{ field: "IsDelete", op: "equal", value: "False", type: "string" }], op: "and" };

			<#
			foreach (var column in SelectColumns)
			{
				if(column.HtmlType == "text")
				{#>
			if (viewModel.<#= column.ColumnName #>() != "") {
					group.rules.push({ field: "<#= column.ColumnName #>", op: "<#= column.Oper #>", value: viewModel.<#= column.ColumnName #>(), type: "string" });
				}
			<#
			}
			if(column.HtmlType == "select")
			{#>
		if ($("#ddl<#= column.ColumnName #>").combogrid("getValue") != "") {
					group.rules.push({ field: "<#= column.ColumnName #>", op: "<#= column.Oper #>", value: $("#ddl<#= column.ColumnName #>").combogrid("getValue"), type: "string" });
				}
			<#
			}
			}
			#>

            return JSON.stringify(group);
        }

        viewModel.doSearchByFilter = function () {
            var defaultGroup = { rules: [{ field: "IsDelete", op: "equal", value: "False", type: "string" }], op: "and" };
            var group = window.filter.getData();
            if (group.rules) {
                group.rules.push(defaultGroup.rules[0]);
            } else {
                group = defaultGroup;
            }

            $('#gGrid').datagrid('load',
                { where: JSON.stringify(group) });
        }
        ko.applyBindings(viewModel);


        var status2str = function (value, row, index) {
            if (value == undefined) {
                return "";
            }
            var statusarr = { 1 : "正常", 2 : "禁用" };

            return statusarr[value];
        }

        var role2str = function (value, row, index) {
            if (value == undefined) {
                return "";
            }
            var rolearr = { 1: "系统管理员", 2: "一般员工" };

            return rolearr[value];
        }

        

        $("#gGrid").datagrid({
            url: "/<#= page.MoudleName #>/<#= page.ActionName #>/GetGridList",
			width: $(document).width() - 2,
            height:$(document).height() - $("#p").height() - 31,
            rownumbers: true,
            pagination: true,
            toolbar: "#gTool",
            singleSelect: true,
            striped: true, //隔行变色  
            idField: 'Id', //主键,
			queryParams: { where: viewModel.getWhere() },
            columns: [[
			{ field: "Id", title: "主键", hidden:true},
			<#
			foreach (var column in GridColumns)
			{
			#>
	{ field: "<#= column.ColumnDtoName #>", title: "<#= column.CHName #>", width: <#= column.Width #>, align: "<#= column.Align #>"  <#= column.IsFormat ? "," + column.Formatter:"" #> } <#= column.EndChar #>
			<#
			}
			#>
            ]]
        });

        var pager = $("#gGrid").datagrid("getPager");
        pager.pagination({
            displayMsg : ""
        });

		$("#p").panel({
            width: $(document).width() - 2
        });
    })
</script>